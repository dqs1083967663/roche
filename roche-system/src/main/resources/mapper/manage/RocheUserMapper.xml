<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roche.manage.mapper.RocheUserMapper">
    
    <resultMap type="RocheUser" id="RocheUserResult">
        <result property="userId"    column="user_id"    />
        <result property="nickName"    column="nick_name"    />
        <result property="age"    column="age"    />
        <result property="sex"    column="sex"    />
        <result property="openId"    column="open_id"    />
        <result property="registerTime"    column="register_time"    />
        <result property="changeTime"    column="change_time"    />
    </resultMap>

    <sql id="selectRocheUserVo">
        select user_id, nick_name, age, sex, open_id, register_time, change_time from roche_user
    </sql>

    <select id="selectRocheUserList" parameterType="RocheUser" resultMap="RocheUserResult">
        <include refid="selectRocheUserVo"/>
        <where>  
            <if test="nickName != null  and nickName != ''"> and nick_name like concat('%', #{nickName}, '%')</if>
            <if test="age != null "> and age = #{age}</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="openId != null  and openId != ''"> and open_id = #{openId}</if>
            <if test="registerTime != null "> and register_time = #{registerTime}</if>
            <if test="changeTime != null "> and change_time = #{changeTime}</if>
            <if test="phoneNo != null "> and user_id = (SELECT user_id FROM roche_user_phone WHERE roche_user_phone.phone_no  like concat('%', #{phoneNo}, '%'))</if>
        </where>
    </select>
    
    <select id="selectRocheUserByUserId" parameterType="Long" resultMap="RocheUserResult">
        <include refid="selectRocheUserVo"/>
        where user_id = #{userId}
    </select>
        
    <insert id="insertRocheUser" parameterType="RocheUser">
        insert into roche_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="age != null">age,</if>
            <if test="sex != null">sex,</if>
            <if test="openId != null">open_id,</if>
            <if test="registerTime != null">register_time,</if>
            <if test="changeTime != null">change_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="age != null">#{age},</if>
            <if test="sex != null">#{sex},</if>
            <if test="openId != null">#{openId},</if>
            <if test="registerTime != null">#{registerTime},</if>
            <if test="changeTime != null">#{changeTime},</if>
         </trim>
    </insert>

    <update id="updateRocheUser" parameterType="RocheUser">
        update roche_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="age != null">age = #{age},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="openId != null">open_id = #{openId},</if>
            <if test="registerTime != null">register_time = #{registerTime},</if>
            <if test="changeTime != null">change_time = #{changeTime},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteRocheUserByUserId" parameterType="Long">
        delete from roche_user where user_id = #{userId}
    </delete>

    <delete id="deleteRocheUserByUserIds" parameterType="String">
        delete from roche_user where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>